''--------------DEFINE OBJECTS----------------------

DEFINE battery USING columnList and elevatorGroup
ENDDEFINE

DEFINE column USING columnList, rangeOfFloor and elevatorGroup
ENDDEFINE

DEFINE elevator USING id, elevatorStatus "MOVING or IDLE", elevatorPosition 
ENDDEFINE


DEFINE callbuton USING UserDirection "UP"or"DOWN", userCurrentFloor
ENDDEFINE


DEFINE floorRequest USING columnList, rangeOfFloor, elevatorGroup and userfloorSelected
ENDDEFINE


DEFINE doors USING doorControl "OPEN" or "CLOSE"
ENDDEFINE


DEFINE floorDisplay using elevatorPosition
ENDDEFINE


''AN USER click from the elevator panel from the lobby

SEQUENCE requestElevator  USING battery, columnList, userFloor and directionValue 
    CALL findBestColumn WITH battery, columnList, userFloor  
    CALL findBestElevator WITH userCurrentFloor AND RETURNING bestElevator
    CALL moveElevator WITH bestElevator AND userCurrentFloor
    CALL elevatoSensor WITH elevatorSensorWeight
    CALL door WITH doorStatus
   
ENDSEQUENCE


SEQUENCE findElevatorColumn USING battery AND columnList

    SET column_A to elevatorList_A to Basement6, Basement5, Basement4 , Basement3, Basement2, Basement1, Lobby
    SET column_B to elevatorList_B to is beetween 2 to 20 floor and lobby
    SET column_C to elevatorList_C to is beetween 21 to 40 floor and lobby
    SET column_D to elevatorList_D to is beetween 41 to 60 floor and lobby
    
     
    FOR EACH columnList
    IF floorSelected is B6, B5, B4 , B3, B2, B1 
        SET elevator to column_A
    ENDIF

    IF floorSelected is beetween from 2 to 20 
        SET elevator to column_B
    ENDIF

    IF floorSelected is beetween from 21 to 40 
        SET elevator to column_C
    ENDIF

    IF floorSelected is beetween from 41 to 60 
        SET elevator to column_D
    ENDIF

     IF floorSelected is LOBBY 
        SET elevator to random columnList
    ENDIF

ENDSEQUENCE



'' This sequence is to find the best elevator
SEQUENCE findBestElevator USING findElevatorColumn userCurrentFloor and userDirection

    SET bestElevator
    SET bestScore TO 0

FOR EACH elevator in findElevatorColumn 
        IF elevatorStatus is idle 
            IF bestScore is LESS THAN 1 THEN
                IF elevatorPosition MINUS userCurrentFloor is LESS THAN bestElevator absolute (elevatorPosition MINUS userFloor)
                    SET bestElevator TO elevator
                    SET bestScore TO 1                      
            ENDIF

        ELSE IF elevatorStatus is idle
            IF elevatorPosition MINUS userCurrentFloor is LESS THAN bestElevator absolute (elevatorPosition MINUS userFloor)
                SET bestElevator TO elevator
                SET bestScore TO 2
            ENDIF
         
        ELSE IF elevatorStatus is moving TO same userDirection and up
            IF elevatorPosition is LOWER then userCurrentFloor and the total OF absolute (elevatorPosition MINUS userFloor) is LOWER than bestElevator
                IF bestScore is LOWER than 3 THEN
                    SET bestElevator TO elevator
                    SET bestScore TO 4
            ENDIF
            
        ELSE IF elevatorStatus is moving TO same userDirection and down
            IF elevatorPosition is HIGHER then userCurrentFloor and the total OF elevatorPosition MINUS userFloor is LOWER than the bestElevator
                IF bestScore is LOWER than 3 THEN
                    SET bestElevator TO elevator
                    SET bestScore TO 4
            ENDIF

        ELSE IF elevatorStatus is moving NOT TO same userDirection
            IF elevatorDistance IS LESS THEN elevator bestScore
                SET bestElevator TO elevator
                SET bestScore TO 5
            ENDIF
    ENDFOR
  
ENDSEQUENCE



''The best elevator been found, move it to the user current floor

SEQUENCE moveElevator BY USING elevator and door
    WHILE elevator position IS LESS THAN requestedFloor
            INCREMENT elevatorPosition
        ENDWHILE

    WHILE elevator position IS GREATER THAN requestedFloor
            DECREMENT elevatorPosition
        ENDWHILE

    SET elevatorStatus TO stop
    SET doorControl to open
            WHILE doorControl is open
                IF closeButton IS true
                    SET doorControl TO close
                ELSE Wait 15 second
                    THEN SET doorControl TO close
            ENDWHILE
    THEN moveElevator to floorSelected
           
    SET elevatorStatus TO idle
ENDSEQUENCE


'' This is to control the elevator sensor weight, so when can limit the total occupancy of each elevator
SET elevatorSensorWeightMax = 2500 kg

SEQUENCE elevatorSensorWeight USING elevator and door
    WHILE doorControl EQUAL at close
        GET getElevatorWeight and ADD IT to elevatorWeightTotal
        IF elevatorWeightTotal  LESS THEN elevatorSensorWeightMax
                SET elevator to moving
        ELSE
            IF elevatorWeightTotal EQUALS OR MORE THEN elevatorSensorWeightMax
                SET elevator to idle
                SET padDisplay to "Max Weight REACH, Please step out the elevator"
         ENDIF
    ENDWHILE
ENDSEQUENCE
    


''This is the sequence to the floordisplay inside each elevator

SEQUENCE floorDisplay  USING columnList, selectedcolumn, elevatorRange
    WHILE elevator is "MOVING" INCREMENT currentElevatorFloor UNTIL elevator position = selectedFloor  
    
 ENDSEQUENCE



'' This is to control the elevator sensor weight, so when can limit the total occupancy of each elevator
SET elevatorSensorWeightMax = 2500 kg

SEQUENCE elevatoSensor USING elevatorSensorWeight
    FOR EACH doorControl = "CLOSE"
    GET getElevatorWeight and ADD IT to elevatorWeightTotal
        IF elevatorWeightTotal  LESS THEN elevatorSensorWeightMax
            SET elevator to "MOVING"
    
        IF elevatorWeightTotal EQUALS OR MORE THEN elevatorSensorWeightMax
            SET elevator to "IDLE"
            SET pad to "Max Weight REACH"

ENDSEQUENCE